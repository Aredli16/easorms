version: '3'

services:
  database:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: "pg_isready -U postgres || exit 1"
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - postgres-data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: start-dev
    restart: always
    ports:
      - "9000:9000"
    environment:
      KC_HTTP_PORT: 9000
      KC_DB: postgres
      KC_DB_URL_HOST: database
      KC_SCHEMA: keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    depends_on:
      database:
        condition: service_healthy

  discovery:
    image: discovery:latest
    restart: always
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 10s
      retries: 10

  gateway:
    image: gateway:latest
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 10s
      retries: 10
    depends_on:
      discovery:
        condition: service_healthy
      registration:
        condition: service_healthy

  registration:
    image: registration:latest
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: "curl --fail --silent localhost:8081/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 10s
      retries: 10
    depends_on:
      discovery:
        condition: service_healthy
      database:
        condition: service_healthy

  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      gateway:
        condition: service_healthy
volumes:
  postgres-data:

